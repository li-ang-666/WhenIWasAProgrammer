# 特殊参数
taskmanager.network.memory.buffer-debloat.enabled: true
classloader.check-leaked-classloader: false
classloader.parent-first-patterns.additional: org.codehaus.;org.apache.kafka.

# JVM参数
env.java.opts.client: -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8 -XX:+PrintGCDetails -XX:+PrintGCDateStamps
env.java.opts.jobmanager: -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8 -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+TraceClassLoading
env.java.opts.taskmanager: -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8 -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+TraceClassLoading

# Checkpoint参数
state.backend.type: hashmap
state.checkpoint-storage: filesystem

# 框架 + 2
taskmanager.memory.framework.heap.size: 128m
taskmanager.memory.framework.off-heap.size: 128m
# 堆外 + 1
taskmanager.memory.task.off-heap.size: 0m
# 网络 + 1
taskmanager.memory.network.fraction: 0.1
taskmanager.memory.network.max: 128m
# RocksDB + 1
taskmanager.memory.managed.fraction: 0.4
taskmanager.memory.managed.size: 0m
# JVM + 2
taskmanager.memory.jvm-metaspace.size: 256m
taskmanager.memory.jvm-overhead.fraction: 0.1
taskmanager.memory.jvm-overhead.max: 256m
taskmanager.memory.jvm-overhead.min: 128m

# YARN
yarn.application.queue: default
yarn.application.priority: 999

# Jobmanager内存
jobmanager.memory.enable-jvm-direct-memory-limit: false
jobmanager.memory.off-heap.size: 0m
jobmanager.memory.jvm-metaspace.size: 256m
jobmanager.memory.jvm-overhead.fraction: 0.1
jobmanager.memory.jvm-overhead.max: 256m
jobmanager.memory.jvm-overhead.min: 128m